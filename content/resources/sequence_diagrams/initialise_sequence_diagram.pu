@startuml

title Initialisation and User Input (MANUAL mode)

actor User as user
entity RobotCLI as rcli
entity AssemblyLine as assemblyline
entity TaskScheduler as taskscheduler
database Logger as logger
entity HumanoidRobot as robot
queue RobotTaskQueue as robottaskqueue
queue TaskSchedulerTaskQueue as taskschedulertaskqueue
queue TaskStack as taskstack
entity Task as task

' ---- System Startup ----
user -> rcli: start programme
activate rcli
user -> assemblyline: start programme
activate assemblyline

assemblyline -> taskscheduler: initialise TaskScheduler
activate taskscheduler

assemblyline -> task: generate task
activate task
assemblyline -> taskschedulertaskqueue: enqueue to taskscheduler taskqueue
assemblyline -> assemblyline: wait to receive on socket

' ---- User Input ----
rcli --> user: wait for user input
user -> rcli: "create robot" input
rcli -> rcli: process user input

rcli --> assemblyline: send create_robot message via UDP
assemblyline -> robot: instantiate new HumanoidRobot
activate robot

rcli --> user: wait for user input
user -> rcli: "assign task" input
rcli -> rcli: process user input

rcli -> taskscheduler: assign task
alt task is on task stack
    taskscheduler -> taskstack: pop task from task stack
else task is in task queue
    taskscheduler -> taskschedulertaskqueue: dequeue task from taskscheduler taskqueue
else
    taskscheduler -> logger: log no task with task id found
end
alt robot task queue not full && robot is available
    taskscheduler -> robottaskqueue: enqueue task to robot taskqueue
else 
    taskscheduler -> logger: log task assign failure
end

rcli --> user: wait for user input
user -> rcli: "change_mode" input
rcli -> rcli: process user input
rcli --> assemblyline: send change_mode message via UDP

alt requested mode not equal to current mode
    assemblyline -> assemblyline: change operating mode
else
    assemblyline -> logger: log already in requested mode
end
@enduml